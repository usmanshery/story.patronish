{"version":3,"sources":["components/Constants.js","components/welcome/WelcomePage.js","components/thankyou/ThankyouPage.js","lib/capture.js","components/video_mac/RecordView/Recorder.js","components/video_mac/ReviewView/ReviewView.js","components/video_mac/MacMainComponent.js","components/video/VideoPlayer.js","components/video/VideoRecorder.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["options","controls","fluid","fill","plugins","record","audio","video","maxLength","debug","Phase","welcome","check","question","start","recording","preview","playback","uploading","thankyou","test","null","Welcome","props","state","questionNo","renderQuestion","bind","handleNext","resetOptions","markOption","this","window","campaign","questions","length","checked","count","setState","Array","pahseCallback","index","value","undefined","map","type","FormControlLabel","key","control","Radio","onChange","label","Checkbox","event","target","statement","className","RadioGroup","intro","onClick","Component","Thankyou","constraints","facingMode","Capture","videoElement","cb","startRecording","setDimensions","audioRecorder","then","captureImagesFromCanvas","sensor","viewfinder","width","height","sleep","milliseconds","date","Date","now","currentDate","stopRecording","Promise","resolve","reject","clearInterval","interval","stop","stream","getTracks","forEach","track","rawData","images","playbackInterval","videoWidth","videoHeight","context","getContext","setInterval","drawImage","url","toDataURL","push","document","createElement","navigator","mediaDevices","getUserMedia","srcObject","Recorder","catch","error","console","requestDevice","deviceReady","phase","status","capture","onRecordEnd","React","createRef","current","onResizeWindow","log","addEventListener","screenWidth","screen","screenHeight","factor","finalVideoHeight","tempStr","getElementById","style","cssText","finalVideoWidth","role","aria-label","checkDialogue","generateCheckDialogue","startDialogue","generateStartDialogue","stopButton","generateStopButton","id","innerWidth","innerHeight","muted","autoPlay","playsInline","ref","ReviewView","recordingDimensions","imageBlobArray","progress","temp","targetDiv","setupFirstImage","img","Image","firstImage","onload","src","playRecording","imageIndex","recordedImage","stopPlayingRecording","handlePlay","play","handleSubmit","startSubmission","convertImagesToBlob","uploadData","imageToBlob","err","blob","baseUrl","env","devURL","prodURL","params","queryString","parse","location","search","fd","FormData","append","zip","JSZip","element","i","file","getWAVBlob","generateAsync","content","fetch","method","body","response","json","ack","finishUpload","updatePhase","resetRecording","generatePreviewButtons","icon","faCloudUploadAlt","generateProgressBar","Spinner","animation","border","previewButtons","progressBar","display","MacMainComponent","updateRecording","updatePhaseCallback","VJSPlayer","player","startPlayback","duration","URL","createObjectURL","onReady","onPlayerReady","onPlay","onVideoPlay","onEnd","onVideoEnd","VJSRecorder","playbackFinished","submitRecording","cleanup","recorder","videojs","recorderNode","version_info","VERSION","getPluginVersion","RecordRTC","version","getDevice","on","negTopOffset","negLeftOffset","recordedData","warn","deviceErrorCode","dispose","isRecording","uploadFile","timestamp","getTime","toString","File","JSON","stringify","thankyouDialogue","generateThankyouDialogue","fonts","font","weights","node","MainComponent","args","App","validating","valid","validationCB","msg","success","platform","name","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e05fa633.chunk.js","sourcesContent":["const Phase = {\r\n\twelcome: \"welcome\",\r\n\tcheck: \"check\",\r\n\tquestion: \"question\",\r\n\tstart: \"start\",\r\n\trecording: \"recording\",\r\n\tpreview: \"preview\",\r\n\tplayback: \"playback\",\r\n\tuploading: \"uploading\",\r\n\tthankyou: \"thankyou\",\r\n\ttest: \"test\",\r\n\tnull: \"null\"\r\n}\r\n\r\nconst checkmark = '✔';\r\n\r\nconst options = {\r\n\tcontrols: false,\r\n\tfluid: false,\r\n\tfill: true,\r\n\tplugins: {\r\n\t\trecord: {\r\n\t\t\taudio: true,\r\n\t\t\tvideo: true,\r\n\t\t\tmaxLength: 120,\r\n\t\t\tdebug: true\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst archiveOptions = {\r\n\tname: 'Node Archiving Sample App',\r\n\thasAudio: true,\r\n\thasVideo: true,\r\n\toutputMode: \"individual\",\r\n\tlayout: {\r\n\t\ttype: \"bestFit\"\r\n\t}\r\n};\r\nexport {\r\n\tcheckmark, \r\n\toptions, \r\n\tarchiveOptions\r\n}\r\nexport default Phase;","import React, { Component } from 'react';\r\nimport { checkmark } from '../Constants';\r\nimport './WelcomePage.css';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass Welcome extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tquestionNo: -1\r\n\t\t};\r\n\r\n\t\tthis.renderQuestion = this.renderQuestion.bind(this);\r\n\t\tthis.handleNext = this.handleNext.bind(this);\r\n\r\n\t\tthis.resetOptions = this.resetOptions.bind(this);\r\n\t\tthis.markOption = this.markOption.bind(this);\r\n\t}\r\n\r\n\thandleNext() {\r\n\t\tlet questionNo = this.state.questionNo;\r\n\t\tquestionNo++;\r\n\r\n\t\t// there are questions and this one is first one (answered) or ahead\r\n\t\tif(window.campaign.questions.length > 0 && questionNo > 0){\r\n\t\t\t// save answe to array\r\n\t\t\twindow.campaign.questions[questionNo - 1][\"answers\"] = this.state.checked;\r\n\t\t}\r\n\r\n\t\tif (window.campaign.questions.length === questionNo) {\r\n\t\t\tthis.props.pahseCallback();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet count = window.campaign.questions[questionNo].options.length;\r\n\t\tthis.setState({\r\n\t\t\tquestionNo,\r\n\t\t\tchecked: Array(count).fill(false)\r\n\t\t});\r\n\t}\r\n\r\n\tresetOptions() {\r\n\t\tthis.setState({\r\n\t\t\tchecked: this.state.checked.fill(false)\r\n\t\t});\r\n\t}\r\n\r\n\tmarkOption(index, value = undefined) {\r\n\t\tlet checked = this.state.checked;\r\n\t\tchecked[index] = value !== undefined ? value : true;\r\n\t\tthis.setState({\r\n\t\t\tchecked\r\n\t\t});\r\n\t}\r\n\r\n\trenderQuestion() {\r\n\t\tif (this.state.questionNo < 0) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\t// get question object\r\n\t\tlet question = window.campaign.questions[this.state.questionNo];\r\n\r\n\t\t// generate based on type\r\n\t\t// question text:\r\n\r\n\t\t// options:\r\n\t\tlet options = question.options.map(\r\n\t\t\t(value, index) => {\r\n\t\t\t\tlet control;\r\n\t\t\t\tif (question.type === \"or\") {\r\n\t\t\t\t\t// single-choice: radio button\r\n\t\t\t\t\tcontrol = <FormControlLabel\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tcontrol={<Radio\r\n\t\t\t\t\t\t\tchecked={this.state.checked[index]}\r\n\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\tthis.resetOptions();\r\n\t\t\t\t\t\t\t\tthis.markOption(index);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\tlabel={value} />;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// multiple-choice: checkbox\r\n\t\t\t\t\tcontrol = <FormControlLabel\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tcontrol={<Checkbox\r\n\t\t\t\t\t\t\tchecked={this.state.checked[index]}\r\n\t\t\t\t\t\t\tonChange={(event) => { this.markOption(index, event.target.checked); }}\r\n\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\tlabel={value} />;\r\n\t\t\t\t}\r\n\t\t\t\treturn control;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tif (question.type === \"and\") {\r\n\t\t\tquestion = <><p>{question.statement}</p><div className=\"checkboxGroup\">{options}</div></>;\r\n\t\t} else {\r\n\t\t\tquestion = <><p>{question.statement}</p><RadioGroup>{options}</RadioGroup></>;\r\n\t\t}\r\n\r\n\t\treturn question;\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet question = this.renderQuestion();\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"dialogue\">\r\n\t\t\t\t<div className=\"dialogue_text_box\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquestion === undefined ? <p>{window.campaign.intro}</p> : question\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"button\" onClick={this.handleNext}>\r\n\t\t\t\t\t{checkmark}&#8287;&#8287;&#8287;YES\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\n\r\nexport default function Thankyou(){\r\n\treturn(\r\n\t\t<div className=\"dialogue\">\r\n\t\t\t<div className=\"dialogue_text_box\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAll done! Thankyou for your response.\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import Recorder from 'js-audio-recorder';\n\nconst FRAME_RATE = 24;\nconst INTERVAL = 1000 / FRAME_RATE;\n\nconst constraints = {\n    video: {\n        facingMode: 'user'\n    }\n};\n\nexport default class Capture {\n    constructor(videoElement, cb) {\n        this.sensor = document.createElement('canvas');\n        this.viewfinder = videoElement;\n        this.images = [];\n        this.audioRecorder = null;\n\n        navigator.mediaDevices\n            .getUserMedia(constraints)\n            .then(stream => {\n                this.stream = stream;\n                this.viewfinder.srcObject = stream;\n                this.audioRecorder = new Recorder();\n            })\n            .then(() => cb())\n            .catch(error => {\n                console.error(\"MediaDevices failed with: \", error);\n            });\n    }\n\n    startRecording = () => {\n        this.setDimensions();\n        this.audioRecorder.start().then(() => {\n            this.captureImagesFromCanvas();\n        });\n    }\n\n    setDimensions = () => {\n        // ffmpeg will only allow even number dimensions, so make them even\n        const {\n            sensor,\n            viewfinder\n        } = this;\n        sensor.width = viewfinder.width % 2 !== 1 ?\n            viewfinder.width :\n            viewfinder.width - 1;\n        sensor.height = viewfinder.height % 2 !== 1 ?\n            viewfinder.height :\n            viewfinder.height - 1;\n    }\n\n    sleep = (milliseconds) => {\n        const date = Date.now();\n        let currentDate = null;\n        do {\n          currentDate = Date.now();\n        } while (currentDate - date < milliseconds);\n      }\n      \n\n    stopRecording = () => {\n        return new Promise((resolve, reject) => {\n            clearInterval(this.interval);\n            this.audioRecorder.stop();\n            // this.audioRecorder.downloadWAV('testaudio');\n            // this.audioRecorder.play();\n            this.stream.getTracks().forEach(track => {\n                track.stop();\n            });\n            // console.log(\"waiting for 10 sec\");\n            // this.sleep(20000);\n            // console.log(\"wait over\");\n            resolve({\n                rawData: {\n                    images: this.images,\n                    playbackInterval: INTERVAL,\n                    audioRecorder: this.audioRecorder,\n                    videoWidth: this.viewfinder.videoWidth,\n                    videoHeight: this.viewfinder.videoHeight\n                }\n            });\n        });\n    }\n\n    captureImagesFromCanvas = () => {\n        const context = this.sensor.getContext(\"2d\");\n\n        // console.log(\"--- $$$ --- \" + this.viewfinder.width + \" , \" + this.viewfinder.height);\n        // console.log(\"--- $$$ --- \" + this.sensor.width + \" , \" + this.sensor.height);\n\n        this.interval = setInterval(() => {\n            context.drawImage(this.viewfinder, 0, 0, this.sensor.width, this.sensor.height);\n            const url = this.sensor.toDataURL(\"image/jpeg\");\n            this.images.push({\n                url\n            });\n            // this.images.push({\n            //     url\n            // });\n            // console.log(\"push \", this.images.length);\n            // console.log(\"push url \", this.images.length);\n            // this.sensor.toBlob(\n            //     (blob) => this.push(url, blob),\n            //     \"image/png\");\n            // this.sensor.toBlob(\n            //     (blob) => {\n            //         // this.images.push({url,blob});\n            //         this.images[this.images.length] = {url, blob};\n            //     },\n            //     \"image/png\");\n\n        }, INTERVAL);\n    }\n\n    // push = (url, blob) => {\n    //     console.log(\"push url \", this.images.length);\n    //     this.images.push({\n    //         url,\n    //         blob\n    //     });\n    //     console.log(\"pushed\");\n    // }\n}\n// import Recorder from 'js-audio-recorder';\n\n// const FRAME_RATE = 24;\n// const INTERVAL = 1000 / FRAME_RATE;\n\n// const constraints = {\n//     video: {\n//         facingMode: 'user'\n//     }\n// };\n\n// export default class Capture {\n//     constructor(videoElement, cb) {\n//         this.sensor = document.createElement('canvas');\n//         this.viewfinder = videoElement;\n//         this.images = [];\n//         this.audioRecorder = null;\n\n//         navigator.mediaDevices\n//             .getUserMedia(constraints)\n//             .then(stream => {\n//                 this.stream = stream;\n//                 this.viewfinder.srcObject = stream;\n//                 this.audioRecorder = new Recorder();\n//             })\n//             .then(() => cb())\n//             .catch(error => {\n//                 console.error(\"MediaDevices failed with: \", error);\n//             });\n//     }\n\n//     startRecording = () => {\n//         this.setDimensions();\n//         this.audioRecorder.start().then(() => {\n//             this.captureImagesFromCanvas();\n//         });\n//     }\n\n//     setDimensions = () => {\n//         // ffmpeg will only allow even number dimensions, so make them even\n//         const {\n//             sensor,\n//             viewfinder\n//         } = this;\n//         sensor.width = viewfinder.width % 2 !== 1 ?\n//             viewfinder.width :\n//             viewfinder.width - 1;\n//         sensor.height = viewfinder.height % 2 !== 1 ?\n//             viewfinder.height :\n//             viewfinder.height - 1;\n//     }\n\n//     stopRecording = () => {\n//         return new Promise((resolve, reject) => {\n//             clearInterval(this.interval);\n//             this.audioRecorder.stop();\n//             // this.audioRecorder.downloadWAV('testaudio');\n//             // this.audioRecorder.play();\n//             this.stream.getTracks().forEach(track => {\n//                 track.stop();\n//             });\n//             resolve({\n//                 rawData: {\n//                     images: this.images,\n//                     playbackInterval: INTERVAL,\n//                     audioRecorder: this.audioRecorder,\n//                     videoWidth: this.viewfinder.videoWidth,\n//                     videoHeight: this.viewfinder.videoHeight\n//                 }\n//             });\n//         });\n//     }\n\n//     captureImagesFromCanvas = () => {\n//         const context = this.sensor.getContext(\"2d\");\n\n//         // console.log(\"--- $$$ --- \" + this.viewfinder.width + \" , \" + this.viewfinder.height);\n//         // console.log(\"--- $$$ --- \" + this.sensor.width + \" , \" + this.sensor.height);\n\n//         this.interval = setInterval(() => {\n//             context.drawImage(this.viewfinder, 0, 0, this.sensor.width, this.sensor.height);\n//             const url = this.sensor.toDataURL(\"image/png\");\n//             //this.push(url);\n//             console.log(\"push url \", this.images.length);\n//             // this.sensor.toBlob(\n//             //     (blob) => this.push(blob), \n//             //     \"image/png\");\n\n//             // this.images.push({\n//             //     url,\n//             //     blob\n//             // });\n//         }, INTERVAL);\n//         console.log(\"The interval: \", INTERVAL);\n//     }\n\n//     push = (blob) => {\n//         console.log(\"push url \", this.images.length);\n//         this.images.push({\n//             blob\n//         });\n//     }\n// }","import React, { Component } from 'react';\nimport Capture from '../../../lib/capture';\nimport '../../video/Video.css';\nimport Phase from '../../Constants';\n\nclass Recorder extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tlet phase = Phase.check;\n\t\tif(props.phase)\n\t\tphase = props.phase;\n\t\tthis.viewfinder = React.createRef();\n\t\tthis.state = {\n\t\t\tphase: phase,\n\t\t\tdeviceReady: false\n\t\t\t// audio: audioTrack\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.capture = new Capture(this.viewfinder.current,\n\t\t\t() => {\n\t\t\t\tthis.onResizeWindow();\n\t\t\t\tthis.setState({\n\t\t\t\t\tdeviceReady: true\n\t\t\t\t});\n\t\t\t\tif(this.state.phase === Phase.null){\n\t\t\t\t\tconsole.log('start phase set');\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tphase: Phase.start\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.setState({\n\t\t\tphase: Phase.check\n\t\t});\n\n\t\tthis.onResizeWindow = this.onResizeWindow.bind(this);\n\t\twindow.addEventListener(\"resize\", this.onResizeWindow);\n\n\t\t// console.log(\"Recorder.js | possible issue code ahead\");\n\t\t// if (navigator.mediaDevices.getUserMedia) {\n\t\t// \tnavigator.mediaDevices.getUserMedia({\n\t\t// \t\taudio: true,\n\t\t// \t\tvideo: { facingMode: { ideal: 'environment' } } // prefer rear-facing camera\n\t\t// \t}).then((stream) => {\n\t\t// \t\tconsole.log(\"Recorder.js | possible issue code 1\");\n\t\t// \t\tconsole.log('stream loaded');\n\t\t// \t\tthis.onResizeWindow();\n\t\t// \t\tthis.setState({\n\t\t// \t\t\tdeviceReady: true\n\t\t// \t\t});\n\t\t// \t\tif(this.state.phase === Phase.null){\n\t\t// \t\t\tconsole.log('start phase set');\n\t\t// \t\t\tthis.setState({\n\t\t// \t\t\t\tphase: Phase.start\n\t\t// \t\t\t});\n\t\t// \t\t}\n\t\t// \t}, (err) => { console.log(err); });\n\t\t// }\n\t}\n\n\tonResizeWindow(){\n\t\tlet stream = this.viewfinder.current;\n\t\tif(stream == null)\n\t\t\treturn;\n\t\t\n\t\tlet videoWidth, videoHeight;\n\t\tvideoWidth = stream.videoWidth;\n\t\tvideoHeight = stream.videoHeight;\n\n\t\tlet screenWidth = window.screen.width;\n\t\tlet screenHeight = window.screen.height;\n\n\t\tlet videoRatio = videoWidth / videoHeight;\n\t\tlet screenRatio = screenWidth / screenHeight;\n\n\t\tif(videoRatio < screenRatio){\n\t\t\tlet factor = screenHeight / videoHeight;\n\t\t\t\n\t\t\tlet fillVideoWidth = factor * videoWidth;\n\t\t\tlet fillVideoHeight = factor * videoHeight;\n\t\n\t\t\tfactor = screenWidth / fillVideoWidth;\n\t\t\tlet finalVideoWidth = screenWidth;\n\t\t\tlet finalVideoHeight = fillVideoHeight * factor;\n\t\n\t\t\tlet negTopOffset = (screenHeight - finalVideoHeight) / 2;\n\t\n\t\t\tlet targetDiv = document.getElementById('recorderDiv');\n\t\t\tlet tempStr = \"width: \" + finalVideoWidth + \"px; height: \" + finalVideoHeight + \"px; top: \" + negTopOffset + \"px;\";\n\t\t\t// console.log(tempStr);\n\t\t\ttargetDiv.style.cssText = tempStr;\n\t\n\t\t}else{\n\t\t\tlet factor = screenWidth / videoWidth;\n\t\t\t\n\t\t\tlet fillVideoWidth = factor * videoWidth;\n\t\t\tlet fillVideoHeight = factor * videoHeight;\n\t\n\t\t\tfactor = screenHeight / fillVideoHeight;\n\t\t\tlet finalVideoWidth = fillVideoWidth * factor;\n\t\t\tlet finalVideoHeight = screenHeight;\n\t\n\t\t\tlet negLeftOffset = (screenWidth - finalVideoWidth) / 2;\n\t\n\t\t\tlet targetDiv = document.getElementById('recorderDiv');\n\t\t\tlet tempStr = \"width: \" + finalVideoWidth + \"px; height: \" + finalVideoHeight + \"px; left: \" + negLeftOffset + \"px;\";\n\t\t\t// console.log(tempStr);\n\t\t\ttargetDiv.style.cssText = tempStr;\n\t\t}\n\t}\n\n\trequestDevice = () => {\n\t\tif(this.state.deviceReady)\n\t\t\tthis.setState({\n\t\t\t\tphase: Phase.start\n\t\t\t});\n\t\telse\n\t\t\tthis.setState({\n\t\t\t\tphase: Phase.null\n\t\t\t});\n\t}\n\n\tstartRecording = () => {\n\t\tthis.setState({\n\t\t\tstatus: 'recording',\n\t\t\tphase: Phase.recording\n\t\t}, this.capture.startRecording);\n\t}\n\n\tstopRecording = () => {\n\t\tthis.capture.stopRecording().then(this.props.onRecordEnd);\n\t\t// this.setState({\n\t\t// \tstatus: 'processing'\n\t\t// }, () => {\n\t\t// \tthis.capture.stopRecording().then(this.props.onRecordEnd);\n\t\t// })\n\t}\n\n\thandleStatusUpdate(status) {\n\t\tthis.setState({\n\t\t\t\tstatus\n\t\t});\n\t}\n\n\tgenerateCheckDialogue(){\n\t\tif(this.state.phase !== Phase.check)\n\t\t\treturn (<></>);\n\t\treturn(\n\t\t\t<div className=\"dialogue\">\n\t\t\t\t<div className=\"dialogue_text_box\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCheck yourself and start recording when you are ready\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"button\" onClick={this.requestDevice}>\n\t\t\t\t\t&#10132;&#8287;&#8287;Next\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgenerateStartDialogue(){\n\t\tif(this.state.phase !== Phase.start)\n\t\t\treturn (<></>);\n\t\treturn(\n\t\t\t<>\n\t\t\t\t<button className=\"buttonRecord buttonMidBottom\" onClick={this.startRecording}>\n\t\t\t\t\t<span role=\"img\" aria-label=\"record\">&#9898;</span><span role=\"img\" aria-label=\"space\">&#8287;</span><span role=\"img\" aria-label=\"space\">&#8287;</span>RECORD\n\t\t\t\t</button>\n\t\t\t</>\n\t\t);\n\t}\n\n\tgenerateStopButton(){\n\t\tif(this.state.phase !== Phase.recording)\n\t\t\treturn (<></>);\n\t\treturn(\n\t\t\t<>\n\t\t\t\t<button className=\"buttonRecord buttonMidBottom\" onClick={this.stopRecording}>\n\t\t\t\t\t<span role=\"img\" aria-label=\"stop\">&#11036;</span><span role=\"img\" aria-label=\"space\">&#8287;</span><span role=\"img\" aria-label=\"space\">&#8287;</span>STOP\n\t\t\t\t</button>\n\t\t\t</>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst checkDialogue = this.generateCheckDialogue();\n\t\tconst startDialogue = this.generateStartDialogue();\n\t\tconst stopButton = this.generateStopButton();\n\n\t\treturn ( \n\t\t\t<div id=\"containerDiv\" className=\"recorderContainer\">\n\t\t\t\t<div id=\"recorderDiv\" className='recorderDiv'>\n\t\t\t\t\t<video id=\"recorder\" className='recorderDiv recorder'\n\t\t\t\t\t width={window.innerWidth} height={window.innerHeight} muted autoPlay playsInline ref = { this.viewfinder }/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{ checkDialogue }\n\t\t\t\t{ startDialogue }\n\t\t\t\t{ stopButton }\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Recorder;","import React, { Component } from 'react';\nimport Phase from '../../Constants';\n\nimport '../../video/Video.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport queryString from 'query-string';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//npm install --save https://github.com/jcblw/image-to-blob\nimport imageToBlob from 'image-to-blob';\nimport JSZip from 'jszip';\n\n\n// import { encode, decode } from \"base64-arraybuffer\";\n\nexport default class ReviewView extends Component {\n\tplayback = React.createRef();\n\taudioRecorder = null;\n\trecordingDimensions = null;\n\timageBlobArray = [];\n\tstate = {\n\t\tstatus: 'stopped',\n\t\tprogress: 0,\n\t\tphase: Phase.preview,\n\t\ttemp: 0\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.recording.rawData) {\n\t\t\tthis.audioRecorder = this.props.recording.rawData.audioRecorder;\n\t\t\tthis.recordingDimensions = this.props.recording.recordingDimensions;\n\t\t\tthis.playback.current.width = window.innerWidth;\n\t\t\tthis.playback.current.height = window.innerHeight;\n\n\t\t\twindow.addEventListener(\"resize\", this.onResizeWindow);\n\t\t\tthis.onResizeWindow();\n\n\t\t\tthis.setupFirstImage();\n\t\t} else {\n\t\t\tthis.props.updatePhase(Phase.start);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.playbackInterval);\n\t}\n\n\tonResizeWindow = () => {\n\t\tlet targetDiv = document.getElementById('player');\n\t\tif (!targetDiv)\n\t\t\treturn;\n\n\t\tlet videoWidth, videoHeight;\n\t\tvideoWidth = this.recordingDimensions.width;\n\t\tvideoHeight = this.recordingDimensions.height;\n\n\t\tlet screenWidth = window.screen.width;\n\t\tlet screenHeight = window.screen.height;\n\n\t\tlet videoRatio = videoWidth / videoHeight;\n\t\tlet screenRatio = screenWidth / screenHeight;\n\n\t\tif (videoRatio < screenRatio) {\n\t\t\tlet factor = screenHeight / videoHeight;\n\n\t\t\tlet fillVideoWidth = factor * videoWidth;\n\t\t\tlet fillVideoHeight = factor * videoHeight;\n\n\t\t\tfactor = screenWidth / fillVideoWidth;\n\t\t\tlet finalVideoWidth = screenWidth;\n\t\t\tlet finalVideoHeight = fillVideoHeight * factor;\n\n\t\t\tlet negTopOffset = (screenHeight - finalVideoHeight) / 2;\n\n\n\t\t\tlet tempStr = \"position: absolute; width: \" + finalVideoWidth + \"px; height: \" + finalVideoHeight + \"px; top: \" + negTopOffset + \"px;\";\n\t\t\t// console.log(tempStr);\n\t\t\ttargetDiv.style.cssText = tempStr;\n\n\t\t} else {\n\t\t\tlet factor = screenWidth / videoWidth;\n\n\t\t\tlet fillVideoWidth = factor * videoWidth;\n\t\t\tlet fillVideoHeight = factor * videoHeight;\n\n\t\t\tfactor = screenHeight / fillVideoHeight;\n\t\t\tlet finalVideoWidth = fillVideoWidth * factor;\n\t\t\tlet finalVideoHeight = screenHeight;\n\n\t\t\tlet negLeftOffset = (screenWidth - finalVideoWidth) / 2;\n\n\t\t\tlet tempStr = \"position: absolute; width: \" + finalVideoWidth + \"px; height: \" + finalVideoHeight + \"px; left: \" + negLeftOffset + \"px;\";\n\t\t\t// console.log(tempStr);\n\t\t\ttargetDiv.style.cssText = tempStr;\n\t\t}\n\t}\n\n\tsetupFirstImage = () => {\n\t\tconst img = new Image();\n\t\tconst firstImage = this.props.recording.rawData.images[0];\n\t\tconsole.log(\"total imgs recvd: \", this.props.recording.rawData.images.length);\n\t\tconst context = this.playback.current.getContext('2d');\n\n\t\timg.onload = () => {\n\t\t\tcontext.drawImage(img, 0, 0);\n\t\t}\n\n\t\timg.src = firstImage.url;\n\t}\n\n\tplayRecording = () => {\n\t\tthis.setState({\n\t\t\tstatus: 'playing'\n\t\t});\n\n\t\tconst { rawData } = this.props.recording;\n\t\tlet imageIndex = 0;\n\t\tthis.playbackInterval = setInterval(() => {\n\t\t\tconst context = this.playback.current.getContext('2d');\n\t\t\tconst img = new Image();\n\t\t\tconst recordedImage = rawData.images[imageIndex];\n\n\t\t\timg.onload = function () {\n\t\t\t\tcontext.drawImage(img, 0, 0);\n\n\t\t\t}\n\n\t\t\timg.src = recordedImage.url;\n\n\t\t\tif (imageIndex >= rawData.images.length - 1) {\n\t\t\t\tthis.stopPlayingRecording();\n\t\t\t}\n\n\t\t\timageIndex += 1;\n\t\t}, rawData.playbackInterval);\n\t}\n\n\tstopPlayingRecording = () => {\n\t\tthis.setState({\n\t\t\tstatus: 'stopped',\n\t\t\tphase: Phase.preview\n\t\t}, () => {\n\t\t\tclearInterval(this.playbackInterval)\n\t\t});\n\t}\n\n\thandlePlay = () => {\n\t\tthis.setState({\n\t\t\tphase: Phase.playback\n\t\t});\n\t\t// console.log(\"type: \" + typeof (this.props.recording.rawData.audioTrack));\n\t\tthis.audioRecorder.play();\n\t\tthis.playRecording();\n\t\t// this.audio.current.play().then(this.playRecording);\n\t}\n\n\thandleSubmit = () => {\n\t\tthis.setState({\n\t\t\tphase: Phase.uploading,\n\t\t},\n\t\t\t() => this.startSubmission()\n\t\t);\n\t}\n\n\t// startSubmission = () => {\n\t// \tconst { images } = this.props.recording.rawData;\n\n\t// \t// this.imagesData = images.map((img) => { return img.blob; });\n\t// \tthis.uploadData();\n\t// }\n\n\tstartSubmission = () => {\n\t\tconst { images } = this.props.recording.rawData;\n\t\tthis.imageBlobArray = [];\n\t\tthis.convertImagesToBlob(images, 0);\n\t\t// window.requestAnimationFrame(this.runtestWrapper);\n\t}\n\n\tconvertImagesToBlob = (images, index) => {\n\t\tif (index >= images.length) {\n\t\t\tthis.uploadData();\n\t\t\treturn;\n\t\t}\n\t\timageToBlob(images[index].url, (err, blob) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.imageBlobArray.push(blob);\n\t\t\tthis.convertImagesToBlob(images, index + 1);\n\t\t\t// setTimeout(() => { this.convertImagesToBlob(images, index + 1); }, 3);\n\t\t});\n\t}\n\n\tuploadData = () => {\n\t\tlet baseUrl;\n\t\tif (window.env === \"dev\") {\n\t\t\tbaseUrl = window.devURL + \"/uploadRawVideo\";\n\t\t}\n\t\telse {\n\t\t\tbaseUrl = window.prodURL + \"/uploadRawVideo\";\n\t\t}\n\n\t\tconst params = queryString.parse(window.location.search);\n\n\t\tvar fd = new FormData();\n\t\tfd.append('url', params.campaign);\n\t\tfd.append('imgcount', this.imageBlobArray.length);\n\n\t\tvar zip = new JSZip();\n\t\tthis.imageBlobArray.forEach((element, i) => {\n\t\t\tzip.file(`image${i}.png`, this.imageBlobArray[i]);\n\t\t});\n\t\tzip.file('audio.wav', this.props.recording.rawData.audioRecorder.getWAVBlob());\n\n\t\tzip.generateAsync({ type: \"blob\" })\n\t\t\t.then((content) => fd.append('data', content, 'data.zip'))\n\t\t\t.then(() => fetch(baseUrl, {method: \"POST\", body: fd })\n\t\t\t.then(response => response.json())\n\t\t\t.then((json) => {\n\t\t\t\tconsole.log(json.ack);\n\t\t\t\tthis.finishUpload();\n\t\t\t}));\n\t}\n\n\tfinishUpload = () => {\n\t\tthis.props.updatePhase(Phase.thankyou);\n\t\t// setTimeout(() => {  }, 600);\n\t}\n\n\tresetRecording = () => {\n\t\tconsole.log(\"reset button called in reviewiew\");\n\t\tthis.props.updatePhase(Phase.start);\n\t}\n\n\tgeneratePreviewButtons = () => {\n\t\tif (this.state.phase !== Phase.preview)\n\t\t\treturn (<></>);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<button id=\"playButton\" className=\"buttonPlay\" onClick={this.handlePlay}>\n\t\t\t\t</button>\n\n\t\t\t\t<div className=\"uploadControls\">\n\n\t\t\t\t\t<button className=\"buttonRetry\" onClick={this.resetRecording}>\n\t\t\t\t\t\t&#8635;&#8287;&#8287;RETRY\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button className=\"buttonSubmit\" onClick={this.handleSubmit}>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faCloudUploadAlt} />&#8287;&#8287;SUBMIT\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\n\tgenerateProgressBar = () => {\n\t\tif (this.state.phase !== Phase.uploading)\n\t\t\treturn (<></>);\n\n\t\treturn (\n\t\t\t<div id=\"uploadProgressDiv\">\n\t\t\t\t<Spinner animation=\"border\" role=\"status\" style={{ width: \"100px\", height: \"100px\", border: \"0.4em solid currentColor\", \"borderRightColor\": \"transparent\", \"marginBottom\": \"50px\" }} />\n\t\t\t\t<h3 id=\"progText\">uploading</h3>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\n\t\tconst previewButtons = this.generatePreviewButtons();\n\t\tconst progressBar = this.generateProgressBar();\n\n\t\treturn (\n\t\t\t<div className='review-view'>\n\t\t\t\t{ this.state.phase !== Phase.uploading ? <canvas id='player' ref={this.playback} /> : <></>}\n\t\t\t\t{ this.state.phase !== Phase.uploading ? <audio ref={this.audio} style={{ display: 'none' }} controls /> : <></>}\n\t\t\t\t{ previewButtons}\n\t\t\t\t{ progressBar}\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\r\n\r\nimport Welcome from '../welcome/WelcomePage';\r\nimport Thankyou from '../thankyou/ThankyouPage';\r\n\r\nimport Recorder from './RecordView/Recorder';\r\nimport ReviewView from './ReviewView/ReviewView';\r\n\r\nimport Phase from '../Constants';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../video/Video.css';\r\nimport '../video_mac/MacMainComponent.css';\r\n\r\nexport default class MacMainComponent extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tphase: Phase.welcome,\r\n\t\t}\r\n\r\n\t\tthis.updatePhase = this.updatePhase.bind(this);\r\n\t\tthis.updateRecording = this.updateRecording.bind(this);\r\n\t\tthis.updatePhaseCallback = this.updatePhaseCallback.bind(this);\r\n\t}\r\n\r\n\tupdatePhaseCallback(){\r\n\t\tthis.updatePhase(null);\r\n\t}\r\n\r\n\tupdatePhase(phase){\r\n\t\t// console.log(\"update phase called with: \" + phase);\r\n\r\n\t\tif(phase){\r\n\t\t\tthis.setState({\r\n\t\t\t\tphase: phase\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch(this.state.phase){\r\n\t\t\tcase Phase.welcome:\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tphase: Phase.check\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\t\t\t// only called when submission is done\r\n\t\t\tcase Phase.preview:\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tphase: Phase.thankyou\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tphase: Phase.welcome\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// console.log(\"updated phase now: \" + this.state.phase);\r\n\t}\r\n\r\n\tupdateRecording(recording){\r\n\t\tthis.setState({\r\n\t\t\trecording: {\r\n\t\t\t\trawData: {\r\n\t\t\t\t\timages: recording.rawData.images,\r\n\t\t\t\t\tplaybackInterval: recording.rawData.playbackInterval,\r\n\t\t\t\t\taudioRecorder: recording.rawData.audioRecorder\r\n\t\t\t\t},\r\n\t\t\t\trecordingDimensions: {\r\n\t\t\t\t\twidth: recording.rawData.videoWidth,\r\n\t\t\t\t\theight: recording.rawData.videoHeight\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tphase: Phase.preview\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst recorderCheck = \r\n\t\t   this.state.phase === Phase.check \r\n\t\t|| this.state.phase === Phase.start \r\n\t\t|| this.state.phase === Phase.recording;\r\n\r\n\t\tif(recorderCheck){\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t<Recorder onRecordEnd={ this.updateRecording }/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst playbackCheck = this.state.phase === Phase.preview || this.state.phase === Phase.playback;\r\n\t\t\r\n\t\tif(playbackCheck){\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t<ReviewView recording={ this.state.recording } updatePhase={ this.updatePhase }/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif(this.state.phase === Phase.thankyou){\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t<Thankyou/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Default:\r\n\t\treturn (\r\n\t\t\t<div className=\"main\">\r\n\t\t\t\t<Welcome pahseCallback={this.updatePhaseCallback}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}","import React, { Component } from 'react';\r\nimport VideoPlayer from 'react-video-js-player';\r\nimport './Video.css';\r\nimport Phase from '../Constants';\r\n\r\nclass VJSPlayer extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.startPlayback = this.startPlayback.bind(this);\r\n\t}\r\n\r\n\tplayer = {}\r\n\r\n\tonPlayerReady(player){\r\n\t\tconsole.log(\"Player is ready: \", player);\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\tonVideoPlay(duration){\r\n\t\tconsole.log(\"Video played at: \", duration);\r\n\t}\r\n\r\n\tonVideoEnd(){\r\n\t\tvar playButton = document.getElementById('playButton');\r\n\t\tplayButton.style.display = \"block\";\r\n\t}\r\n\r\n\tstartPlayback(){\r\n\t\tvar playButton = document.getElementById('playButton');\r\n\t\tplayButton.style.display = \"none\";\r\n\t\tthis.player.play();\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.props.src == null || this.props.phase === Phase.uploading || this.props.phase === Phase.thankyou)\r\n\t\t\treturn (<></>);\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<button id=\"playButton\" className=\"buttonPlay\" onClick={this.startPlayback}></button>\r\n\t\t\t\t<div className=\"player\">\r\n\t\t\t\t\t<VideoPlayer\r\n\t\t\t\t\t\tclassName=\"player\"\r\n\t\t\t\t\t\tcontrols={false}\r\n\t\t\t\t\t\tsrc={{src: window.URL.createObjectURL(this.props.src),type: 'video/mp4'}}\r\n\t\t\t\t\t\tonReady={this.onPlayerReady.bind(this)}\r\n\t\t\t\t\t\tonPlay={this.onVideoPlay.bind(this)}\r\n\t\t\t\t\t\tonEnd={this.onVideoEnd.bind(this)}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nexport default VJSPlayer;","import React, { Component } from 'react';\r\nimport Phase, { options } from '../Constants';\r\n\r\nimport videojs from 'video.js';\r\nimport RecordRTC from 'recordrtc';\r\n\r\nimport 'videojs-record/dist/videojs.record.js';\r\nimport 'video.js/dist/video-js.css';\r\nimport 'videojs-record/dist/css/videojs.record.css';\r\nimport './Video.css';\r\n\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport VJSPlayer from './VideoPlayer';\r\nimport GoogleFontLoader from 'react-google-font-loader';\r\nimport queryString from 'query-string';\r\n\r\nexport default class VJSRecorder extends Component{\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tphase: Phase.start,\r\n\t\t\tdeviceReady: false,\r\n\t\t\tsrc: null\r\n\t\t}\r\n\r\n\t\tthis.requestDevice = this.requestDevice.bind(this);\r\n\r\n\t\tthis.startRecording = this.startRecording.bind(this);\r\n\t\tthis.stopRecording = this.stopRecording.bind(this);\r\n\t\tthis.startPlayback = this.startPlayback.bind(this);\r\n\t\tthis.resetRecording = this.resetRecording.bind(this);\r\n\t\tthis.playbackFinished = this.playbackFinished.bind(this);\r\n\r\n\t\tthis.submitRecording = this.submitRecording.bind(this);\r\n\t\tthis.onResizeWindow = this.onResizeWindow.bind(this);\r\n\t\t// this.runtestWrapper = this.runtestWrapper.bind(this);\r\n\t\tthis.cleanup = this.cleanup.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\twindow.addEventListener(\"resize\", this.onResizeWindow);\r\n\t\t// instantiate Video.js\r\n\t\tvar recorder = videojs(this.recorderNode, options, () => {\r\n\t\t\t// print version information at startup\r\n\t\t\tconst version_info = 'Using video.js ' + videojs.VERSION +\r\n\t\t\t\t' with videojs-record ' + videojs.getPluginVersion('record') +\r\n\t\t\t\t' and recordrtc ' + RecordRTC.version;\r\n\t\t\tvideojs.log(version_info);\r\n\t\t\trecorder.record().getDevice();\r\n\t\t});\r\n\r\n\t\t// device is ready\r\n\t\trecorder.on('deviceReady', () => {\r\n\t\t\tconsole.log('device is ready!');\r\n\t\t\tthis.setState({\r\n\t\t\t\tdeviceReady: true\r\n\t\t\t});\r\n\t\t\tif(this.state.phase === Phase.null){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tphase: Phase.start\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tlet videoWidth = recorder.videoWidth();\r\n\t\t\tlet videoHeight = recorder.videoHeight();\r\n\t\r\n\t\t\tlet screenWidth = window.screen.width;\r\n\t\t\tlet screenHeight = window.screen.height;\r\n\t\r\n\t\t\tlet videoRatio = videoWidth / videoHeight;\r\n\t\t\tlet screenRatio = screenWidth / screenHeight;\r\n\t\r\n\t\t\tif(videoRatio < screenRatio){\r\n\t\t\t\tlet factor = screenHeight / videoHeight;\r\n\t\t\t\t\r\n\t\t\t\tlet fillVideoWidth = factor * videoWidth;\r\n\t\t\t\tlet fillVideoHeight = factor * videoHeight;\r\n\t\t\r\n\t\t\t\tfactor = screenWidth / fillVideoWidth;\r\n\t\t\t\tlet finalVideoWidth = screenWidth;\r\n\t\t\t\tlet finalVideoHeight = fillVideoHeight * factor;\r\n\t\t\r\n\t\t\t\tlet negTopOffset = (screenHeight - finalVideoHeight) / 2;\r\n\t\t\r\n\t\t\t\tlet targetDiv = document.getElementById('recorderDiv');\r\n\t\t\t\tlet tempStr = \"width: \" + finalVideoWidth + \"px; height: \" + finalVideoHeight + \"px; top: \" + negTopOffset + \"px; overflow: hidden;\";\r\n\t\t\t\tconsole.log(tempStr);\r\n\t\t\t\ttargetDiv.style.cssText = tempStr;\r\n\t\t\r\n\t\t\t}else{\r\n\t\t\t\tlet factor = screenWidth / videoWidth;\r\n\t\t\t\t\r\n\t\t\t\tlet fillVideoWidth = factor * videoWidth;\r\n\t\t\t\tlet fillVideoHeight = factor * videoHeight;\r\n\t\t\r\n\t\t\t\tfactor = screenHeight / fillVideoHeight;\r\n\t\t\t\tlet finalVideoWidth = fillVideoWidth * factor;\r\n\t\t\t\tlet finalVideoHeight = screenHeight;\r\n\t\t\r\n\t\t\t\tlet negLeftOffset = (screenWidth - finalVideoWidth) / 2;\r\n\t\t\r\n\t\t\t\tlet targetDiv = document.getElementById('recorderDiv');\r\n\t\t\t\tlet tempStr = \"width: \" + finalVideoWidth + \"px; height: \" + finalVideoHeight + \"px; left: \" + negLeftOffset + \"px;\";\r\n\t\t\t\tconsole.log(tempStr);\r\n\t\t\t\ttargetDiv.style.cssText = tempStr;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// let videoDiv = document.getElementById('videoDiv');\r\n\t\t\t// videoDiv.classList.add('videoDiv');\r\n\t\t});\r\n\r\n\t\t// user clicked the record button and started recording\r\n\t\trecorder.on('startRecord', () => {\r\n\t\t\tconsole.log('started recording!');\r\n\t\t});\r\n\r\n\t\t// user completed recording and stream is available\r\n\t\trecorder.on('finishRecord', () => {\r\n\t\t\t// recordedData is a blob object containing the recorded data that\r\n\t\t\t// can be downloaded by the user, stored on server etc.\t\r\n\t\t\tconsole.log(\"finished recording: \", recorder.recordedData);\r\n\t\t\t\r\n\t\t\tvar recorderElement = document.getElementById('recorder');\r\n\t\t\trecorderElement.style.display = \"none\";\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tsrc: recorder.recordedData\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// error handling\r\n\t\trecorder.on('error', (element, error) => {\r\n\t\t\tconsole.warn(error);\r\n\t\t});\r\n\r\n\t\trecorder.on('deviceError', () => {\r\n\t\t\tconsole.error('device error:', this.recorder.deviceErrorCode);\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\trecorder: recorder\r\n\t\t});\r\n\r\n\t\t\r\n\t\t// window.setInterval(this.runtestWrapper, 1000 / 60);\r\n\t}\r\n\r\n\tonResizeWindow(){\r\n\t\tif(!this.state.recorder || this.state.phase === Phase.uploading || this.state.phase === Phase.thankyou)\r\n\t\t\treturn;\r\n\t\tlet videoWidth = this.state.recorder.videoWidth();\r\n\t\tlet videoHeight = this.state.recorder.videoHeight();\r\n\r\n\t\tlet screenWidth = window.screen.width;\r\n\t\tlet screenHeight = window.screen.height;\r\n\r\n\t\tlet videoRatio = videoWidth / videoHeight;\r\n\t\tlet screenRatio = screenWidth / screenHeight;\r\n\r\n\t\tif(videoRatio < screenRatio){\r\n\t\t\tlet factor = screenHeight / videoHeight;\r\n\t\t\t\r\n\t\t\tlet fillVideoWidth = factor * videoWidth;\r\n\t\t\tlet fillVideoHeight = factor * videoHeight;\r\n\t\r\n\t\t\tfactor = screenWidth / fillVideoWidth;\r\n\t\t\tlet finalVideoWidth = screenWidth;\r\n\t\t\tlet finalVideoHeight = fillVideoHeight * factor;\r\n\t\r\n\t\t\tlet negTopOffset = (screenHeight - finalVideoHeight) / 2;\r\n\t\r\n\t\t\tlet targetDiv = document.getElementById('recorderDiv');\r\n\t\t\tlet tempStr = \"width: \" + finalVideoWidth + \"px; height: \" + finalVideoHeight + \"px; top: \" + negTopOffset + \"px;\";\r\n\t\t\tconsole.log(tempStr);\r\n\t\t\ttargetDiv.style.cssText = tempStr;\r\n\t\r\n\t\t}else{\r\n\t\t\tlet factor = screenWidth / videoWidth;\r\n\t\t\t\r\n\t\t\tlet fillVideoWidth = factor * videoWidth;\r\n\t\t\tlet fillVideoHeight = factor * videoHeight;\r\n\t\r\n\t\t\tfactor = screenHeight / fillVideoHeight;\r\n\t\t\tlet finalVideoWidth = fillVideoWidth * factor;\r\n\t\t\tlet finalVideoHeight = screenHeight;\r\n\t\r\n\t\t\tlet negLeftOffset = (screenWidth - finalVideoWidth) / 2;\r\n\t\r\n\t\t\tlet targetDiv = document.getElementById('recorderDiv');\r\n\t\t\tlet tempStr = \"width: \" + finalVideoWidth + \"px; height: \" + finalVideoHeight + \"px; left: \" + negLeftOffset + \"px;\";\r\n\t\t\tconsole.log(tempStr);\r\n\t\t\ttargetDiv.style.cssText = tempStr;\r\n\t\t}\r\n\t}\r\n\r\n\t// destroy player on unmount\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.state.recorder) {\r\n\t\t\tthis.state.recorder.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t// recording\r\n\trequestDevice(){\r\n\t\tif(!this.state.deviceReady){\r\n\t\t\tthis.setState({\r\n\t\t\t\tphase: Phase.null\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.setState({\r\n\t\t\t\tphase: Phase.start\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tstartRecording(){\r\n\t\tif (!this.state.recorder.record().isRecording()) {\r\n\t\t\tthis.state.recorder.record().start();\r\n\t\t\tthis.setState({\r\n\t\t\t\tphase: Phase.recording\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tstopRecording(){\r\n\t\tif (this.state.recorder.record().isRecording()) {\r\n\t\t\tthis.state.recorder.record().stop();\r\n\t\t\tthis.setState({\r\n\t\t\t\tphase: Phase.preview\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tstartPlayback(){\r\n\t\t// this.setState({\r\n\t\t// \tphase: Phase.playback\r\n\t\t// });\r\n\t\t// var player = videojs('player');\r\n\t\t// player.on('ended', this.playbackFinished);\r\n\t\t// player.play();\r\n\t}\r\n\r\n\tplaybackFinished(){\r\n\t\t// console.log(\"Playback finished. changed state to preview\");\r\n\t\t// this.setState({\r\n\t\t// \tphase: Phase.preview\r\n\t\t// });\r\n\t}\r\n\r\n\tresetRecording(){\r\n\t\tvar recorder = document.getElementById('recorder');\r\n\t\trecorder.style.display = \"block\";\r\n\r\n\t\tthis.setState({\r\n\t\t\tsrc: null,\r\n\t\t\tphase: Phase.start\r\n\t\t});\r\n\t}\r\n\r\n\tsubmitRecording(){\r\n\t\t// hide everything\r\n\t\tthis.setState({\r\n\t\t\tphase: Phase.uploading\r\n\t\t});\r\n\t\tdocument.getElementById('recorder').style.display = \"none\";\r\n\r\n\t\tvar uploadFile = this.state.src;\r\n\t\tvar timestamp = new Date().getTime().toString();\r\n\t\tuploadFile = new File([uploadFile], timestamp);\r\n\t\tvar fd = new FormData();\r\n\t\tconst params = queryString.parse(window.location.search);\r\n\t\tfd.append('upl', uploadFile, 'video.mp4');\r\n\t\tfd.append('url', params.campaign);\r\n\t\tfd.append('ans', JSON.stringify(window.campaign.questions));\r\n\t\t\r\n\r\n\t\tlet baseUrl;\r\n\t\tif (window.env === \"dev\") {\r\n\t\t\tbaseUrl = window.devURL + \"/uploadVideo\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbaseUrl = window.prodURL + \"/uploadVideo\";\r\n\t\t}\r\n\t\tfetch(baseUrl, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: fd\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then((json) => {\r\n\t\t\tif(json.err){\r\n\t\t\t\tconsole.log(json.err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconsole.log(json.ack);\r\n\t\t\tthis.cleanup();\r\n\t\t}); \r\n\t}\r\n\r\n\tcleanup(){\r\n\t\tthis.state.recorder.dispose();\r\n\t\tthis.setState({\r\n\t\t\tphase: Phase.thankyou\r\n\t\t});\r\n\t}\r\n\r\n\t// ui for dialogues and buttons\r\n\tgenerateCheckDialogue(){\r\n\t\tif(this.state.phase !== Phase.check)\r\n\t\t\treturn (<></>);\r\n\t\treturn(\r\n\t\t\t<div className=\"dialogue\">\r\n\t\t\t\t<div className=\"dialogue_text_box\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tCheck yourself and start recording when you are ready\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"button\" onClick={this.requestDevice}>\r\n\t\t\t\t\t&#10132;&#8287;&#8287;Next\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// Record a short video telling us what you like about your new Casper mattress. <span role=\"img\" aria-label=\"raising hands\">🙌🏻</span> Hit record when ready <span role=\"img\" aria-label=\"point downwards\">👇🏻</span>\r\n\tgenerateStartDialogue(){\r\n\t\tif(this.state.phase !== Phase.start)\r\n\t\t\treturn (<></>);\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"dialogue\">\r\n\t\t\t\t\t<div className=\"dialogue_text_box\">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tCheck yourself and start recording when you are ready\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"buttonRecord buttonMidBottom\" onClick={this.startRecording}>\r\n\t\t\t\t<span role=\"img\" aria-label=\"record\">&#9898;</span><span role=\"img\" aria-label=\"space\">&#8287;</span><span role=\"img\" aria-label=\"space\">&#8287;</span>RECORD\r\n\t\t\t\t</button>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tgenerateStopButton(){\r\n\t\tif(this.state.phase !== Phase.recording)\r\n\t\t\treturn (<></>);\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t<button className=\"buttonRecord buttonMidBottom\" onClick={this.stopRecording}>\r\n\t\t\t\t<span role=\"img\" aria-label=\"stop\">&#11036;</span><span role=\"img\" aria-label=\"space\">&#8287;</span><span role=\"img\" aria-label=\"space\">&#8287;</span>STOP\r\n\t\t\t\t</button>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tgeneratePreviewButtons(){\r\n\t\tif(this.state.phase !== Phase.preview)\r\n\t\t\treturn (<></>);\r\n\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"uploadControls\">\r\n\t\t\t\t\t<button className=\"buttonRetry\" onClick={this.resetRecording}>\r\n\t\t\t\t\t\t&#8635;&#8287;&#8287;RETRY\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button className=\"buttonSubmit\" onClick={this.submitRecording}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faCloudUploadAlt}/>&#8287;&#8287;SUBMIT\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tgenerateProgressBar(){\r\n\t\tif(this.state.phase !== Phase.uploading)\r\n\t\t\treturn (<></>);\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div id=\"uploadProgressDiv\">\r\n\t\t\t\t<Spinner animation=\"border\" role=\"status\" style={{ width: \"100px\", height: \"100px\", border: \"0.4em solid currentColor\", \"borderRightColor\": \"transparent\", \"margin-bottom\": \"50px\" }}/>\r\n\t\t\t\t<h3 id=\"progText\">uploading</h3>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tgenerateThankyouDialogue(){\r\n\t\tif(this.state.phase !== Phase.thankyou)\r\n\t\t\treturn (<></>);\r\n\t\treturn(\r\n\t\t\t<div className=\"dialogue\">\r\n\t\t\t\t<div className=\"dialogue_text_box\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\tAll done! Thankyou for your response.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\trender(){\r\n\t\t\r\n\t\t// const checkDialogue = this.generateCheckDialogue();\r\n\t\tconst startDialogue = this.generateStartDialogue();\r\n\t\tconst stopButton = this.generateStopButton();\r\n\t\tconst previewButtons = this.generatePreviewButtons();\r\n\t\tconst progressBar = this.generateProgressBar();\r\n\t\tconst thankyouDialogue = this.generateThankyouDialogue();\r\n\r\n\t\treturn(\r\n\t\t\t<div id=\"containerDiv\" className=\"recorderContainer\">\r\n\t\t\t\t<div className=\"recorderDiv\" id=\"recorderDiv\">\r\n\t\t\t\t\t<GoogleFontLoader fonts={[{font: 'Quicksand',weights: [400]}]} />\r\n\t\t\t\t\t<video id=\"recorder\" ref={node => this.recorderNode = node} className=\"video-js vjs-default-skin recorder\" playsInline></video>\r\n\t\t\t\t\t<VJSPlayer src={this.state.src} phase={this.state.phase}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* {checkDialogue} */}\r\n\t\t\t\t{startDialogue}\r\n\t\t\t\t{stopButton}\r\n\t\t\t\t{previewButtons}\r\n\t\t\t\t{progressBar}\r\n\t\t\t\t{thankyouDialogue}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport './MainComponent.css';\r\n\r\nimport Welcome from './welcome/WelcomePage';\r\nimport VJSRecorder from './video/VideoRecorder';\r\nimport Thankyou from'./thankyou/ThankyouPage';\r\n\r\nimport Phase from './Constants';\r\n\r\nclass MainComponent extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tphase: Phase.welcome,\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tupdatePhase = (args) => {\r\n\t\tlet phase = undefined;\r\n\t\tif(args){\r\n\t\t\tphase = args.phase;\r\n\t\t}\r\n\t\t\r\n\t\tif(phase){\r\n\t\t\tthis.setState({\r\n\t\t\t\tphase: phase\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch(this.state.phase){\r\n\t\t\tcase Phase.welcome:\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tphase: Phase.start\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\t\t\t// only called when submission is done\r\n\t\t\tcase Phase.preview:\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tphase: Phase.thankyou\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tphase: Phase.welcome\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst recorderCheck = this.state.phase === Phase.start \r\n\t\t|| this.state.phase === Phase.recording \r\n\t\t|| this.state.phase === Phase.preview \r\n\t\t|| this.state.phase === Phase.playback;\r\n\r\n\t\tif(recorderCheck){\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t<VJSRecorder pahseCallback={this.updatePhase}/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif(this.state.phase === Phase.thankyou){\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t<Thankyou/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Default:\r\n\t\treturn (\r\n\t\t\t<div className=\"main\">\r\n\t\t\t\t<Welcome pahseCallback={this.updatePhase}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default MainComponent;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport MacMainComponent from './components/video_mac/MacMainComponent';\n\nimport platform from 'platform';\nimport MainComponent from './components/MainComponent';\n\nimport Spinner from 'react-bootstrap/Spinner';\nimport queryString from 'query-string';\n\nexport default class App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tvalidating: true,\n\t\t\tvalid: false\n\t\t}\n\n\t\tthis.validationCB = this.validationCB.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\t// start url validation\n\t\tconst params = queryString.parse(window.location.search);\n\t\tif(!params.campaign){\n\t\t\tthis.setState({\n\t\t\t\tvalidating: false,\n\t\t\t\tvalid: false,\n\t\t\t\tmsg: \"Invalid Campaign URL\"\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tlet baseUrl;\n\t\tif (window.env === \"dev\") {\n\t\t\tbaseUrl = window.devURL + \"/campaign/\";\n\t\t\tconsole.log(\"developmental build \");\n\t\t}\n\t\telse {\n\t\t\tbaseUrl = window.prodURL + \"/campaign/\";\n\t\t}\n\t\t\n\t\tconst url = baseUrl + params.campaign;\n\t\tfetch(url, { method: \"GET\" })\n\t\t.then(response => response.json())\n\t\t.then(this.validationCB); \n\t}\n\n\tvalidationCB(json){\n\t\tif(!json.success){\n\t\t\tthis.setState({\n\t\t\t\tvalidating: false,\n\t\t\t\tvalid: false,\n\t\t\t\tmsg: json.msg\n\t\t\t});\n\t\t}else{\n\t\t\twindow.campaign = json.campaign;\n\t\t\tthis.setState({\n\t\t\t\tvalidating: false,\n\t\t\t\tvalid: true\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tif(this.state.validating){\n\t\t\treturn (\n\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t<Spinner animation=\"border\" role=\"status\" style={{ width: \"100px\", height: \"100px\", border: \"0.4em solid currentColor\", \"borderRightColor\": \"transparent\"}}/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t// if url was found to be invalid, show error screen\n\t\tif(!this.state.valid){\n\t\t\treturn (\n\t\t\t\t<div className=\"loading-failed\">\n\t\t\t\t\t<h1>{this.state.msg}</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <BrowserRouter>\n\t\t\t{\n\t\t\t\tplatform.name === 'Safari' ?\n\t\t\t\t\t<Route path='/' component={MacMainComponent} /> :\n\t\t\t\t\t<Route path='/' component={MainComponent} />\n\t\t\t}\n\t\t\t{() => console.log(\"platform \" + platform.name)}\n\t\t</BrowserRouter>\n\t}\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst render = () => {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App/>\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n\t);\n}\n\nrender()\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept('./App', render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}